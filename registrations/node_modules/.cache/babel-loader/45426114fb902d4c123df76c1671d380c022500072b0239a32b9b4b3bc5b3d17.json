{"ast":null,"code":"var _jsxFileName = \"/workspaces/registration_deploy/registrations/src/components/StepTwo.js\";\nimport React from 'react';\nimport '../styles/StepTwo.css';\nimport { FcGoogle } from 'react-icons/fc';\n//import { GoogleLogin } from 'react-google-login'; \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StepTwo = ({\n  nextStep\n}) => {\n  // Handler for successful Google login\n  // const responseGoogleSuccess = (response) => {\n  //   console.log('Google login success:', response);\n  //   // Extract the ID token from the Google response\n  //   const token = response.tokenId;\n\n  //   // Send the token to your backend for verification and further processing\n  //   fetch('/api/auth/google', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ token }),\n  //   })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Login success:', data);\n  //       // Handle login success, e.g., by advancing to the next step or setting user state\n  //       nextStep(); // Or other actions based on your app's flow\n  //     })\n  //     .catch(error => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  // Handler for Google login failure\n  // const responseGoogleFailure = (response) => {\n  //   console.error('Google login failure:', response);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"step-title\",\n      children: \"Welcome to Shyn Coin Tech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: \"Feel free to choose a really cool name that other users can use to find you, e.g., cryptolord, cryptobaby, joy01, etc.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Input username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: nextStep,\n      children: \"Proceed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: \"OR CONTINUE WITH:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button google-sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(FcGoogle, {\n        className: \"google-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" Continue with Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"link\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = StepTwo;\nexport default StepTwo;\nvar _c;\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"names":["React","FcGoogle","jsxDEV","_jsxDEV","Fragment","_Fragment","StepTwo","nextStep","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","href","_c","$RefreshReg$"],"sources":["/workspaces/registration_deploy/registrations/src/components/StepTwo.js"],"sourcesContent":["import React from 'react';\nimport '../styles/StepTwo.css';\nimport { FcGoogle } from 'react-icons/fc';\n//import { GoogleLogin } from 'react-google-login'; \n\nconst StepTwo = ({ nextStep }) => {\n  // Handler for successful Google login\n  // const responseGoogleSuccess = (response) => {\n  //   console.log('Google login success:', response);\n  //   // Extract the ID token from the Google response\n  //   const token = response.tokenId;\n\n  //   // Send the token to your backend for verification and further processing\n  //   fetch('/api/auth/google', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ token }),\n  //   })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Login success:', data);\n  //       // Handle login success, e.g., by advancing to the next step or setting user state\n  //       nextStep(); // Or other actions based on your app's flow\n  //     })\n  //     .catch(error => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  // Handler for Google login failure\n  // const responseGoogleFailure = (response) => {\n  //   console.error('Google login failure:', response);\n  // };\n\n  return (\n    <>\n      <h1 className=\"step-title\">Welcome to Shyn Coin Tech</h1>\n      <p className=\"text\">Feel free to choose a really cool name that other users can use to find you, e.g., cryptolord, cryptobaby, joy01, etc.</p>\n      <input className=\"input\" type=\"text\" placeholder=\"Input username\" />\n      <button className=\"button\" onClick={nextStep}>Proceed</button>\n      <p className=\"text\">OR CONTINUE WITH:</p>\n      {/* Google sign-in button using react-google-login */}\n      {/* <GoogleLogin\n        clientId=\"CLIENT_ID_HERE\" \n        render={renderProps => (\n          <button onClick={renderProps.onClick} disabled={renderProps.disabled} className=\"button google-sign-in\">\n            <FcGoogle className=\"google-icon\" /> Continue with Google\n          </button>\n        )}\n        onSuccess={responseGoogleSuccess}\n        onFailure={responseGoogleFailure}\n        cookiePolicy={'single_host_origin'}\n      /> */}\n      {/* I've commented out the Google login components */}\n      <button className=\"button google-sign-in\">\n        <FcGoogle className=\"google-icon\" /> Continue with Google\n      </button>\n      <p className=\"text\">Already have an account? <a href=\"#\" className=\"link\">Sign in</a></p>\n    </>\n  );\n};\n\nexport default StepTwo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA;MAAIM,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDV,OAAA;MAAGM,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAsH;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9IV,OAAA;MAAOM,SAAS,EAAC,OAAO;MAACK,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpEV,OAAA;MAAQM,SAAS,EAAC,QAAQ;MAACO,OAAO,EAAET,QAAS;MAAAC,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DV,OAAA;MAAGM,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAczCV,OAAA;MAAQM,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBACvCL,OAAA,CAACF,QAAQ;QAACQ,SAAS,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,yBACtC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTV,OAAA;MAAGM,SAAS,EAAC,MAAM;MAAAD,QAAA,GAAC,2BAAyB,eAAAL,OAAA;QAAGc,IAAI,EAAC,GAAG;QAACR,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACzF,CAAC;AAEP,CAAC;AAACK,EAAA,GAzDIZ,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}