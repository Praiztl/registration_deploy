{"ast":null,"code":"import React from'react';import'../styles/StepTwo.css';import{FcGoogle}from'react-icons/fc';//import { GoogleLogin } from 'react-google-login'; \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const StepTwo=_ref=>{let{nextStep}=_ref;// Handler for successful Google login\n// const responseGoogleSuccess = (response) => {\n//   console.log('Google login success:', response);\n//   // Extract the ID token from the Google response\n//   const token = response.tokenId;\n//   // Send the token to your backend for verification and further processing\n//   fetch('/api/auth/google', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({ token }),\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log('Login success:', data);\n//       // Handle login success, e.g., by advancing to the next step or setting user state\n//       nextStep(); // Or other actions based on your app's flow\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });\n// };\n// Handler for Google login failure\n// const responseGoogleFailure = (response) => {\n//   console.error('Google login failure:', response);\n// };\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"step-title\",children:\"Welcome to Shyn Coin Tech\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text\",children:\"Feel free to choose a really cool name that other users can use to find you, e.g., cryptolord, cryptobaby, joy01, etc.\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",placeholder:\"Input username\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:nextStep,children:\"Proceed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text\",children:\"OR CONTINUE WITH:\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"button google-sign-in\",children:[/*#__PURE__*/_jsx(FcGoogle,{className:\"google-icon\"}),\" Continue with Google\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"https://shyntech-auth.netlify.app/\",className:\"link\",children:\"Sign in\"})]})]});};export default StepTwo;","map":{"version":3,"names":["React","FcGoogle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StepTwo","_ref","nextStep","children","className","type","placeholder","onClick","href"],"sources":["/workspaces/registration_deploy/registrations/src/components/StepTwo.js"],"sourcesContent":["import React from 'react';\nimport '../styles/StepTwo.css';\nimport { FcGoogle } from 'react-icons/fc';\n//import { GoogleLogin } from 'react-google-login'; \n\nconst StepTwo = ({ nextStep }) => {\n  // Handler for successful Google login\n  // const responseGoogleSuccess = (response) => {\n  //   console.log('Google login success:', response);\n  //   // Extract the ID token from the Google response\n  //   const token = response.tokenId;\n\n  //   // Send the token to your backend for verification and further processing\n  //   fetch('/api/auth/google', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ token }),\n  //   })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Login success:', data);\n  //       // Handle login success, e.g., by advancing to the next step or setting user state\n  //       nextStep(); // Or other actions based on your app's flow\n  //     })\n  //     .catch(error => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  // Handler for Google login failure\n  // const responseGoogleFailure = (response) => {\n  //   console.error('Google login failure:', response);\n  // };\n\n  return (\n    <>\n      <h1 className=\"step-title\">Welcome to Shyn Coin Tech</h1>\n      <p className=\"text\">Feel free to choose a really cool name that other users can use to find you, e.g., cryptolord, cryptobaby, joy01, etc.</p>\n      <input className=\"input\" type=\"text\" placeholder=\"Input username\" />\n      <button className=\"button\" onClick={nextStep}>Proceed</button>\n      <p className=\"text\">OR CONTINUE WITH:</p>\n      {/* Google sign-in button using react-google-login */}\n      {/* <GoogleLogin\n        clientId=\"CLIENT_ID_HERE\" \n        render={renderProps => (\n          <button onClick={renderProps.onClick} disabled={renderProps.disabled} className=\"button google-sign-in\">\n            <FcGoogle className=\"google-icon\" /> Continue with Google\n          </button>\n        )}\n        onSuccess={responseGoogleSuccess}\n        onFailure={responseGoogleFailure}\n        cookiePolicy={'single_host_origin'}\n      /> */}\n      {/* I've commented out the Google login components */}\n      <button className=\"button google-sign-in\">\n        <FcGoogle className=\"google-icon\" /> Continue with Google\n      </button>\n      <p className=\"text\">Already have an account? <a href=\"https://shyntech-auth.netlify.app/\" className=\"link\">Sign in</a></p>\n    </>\n  );\n};\n\nexport default StepTwo;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAC9B,OAASC,QAAQ,KAAQ,gBAAgB,CACzC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,mBACEJ,KAAA,CAAAE,SAAA,EAAAI,QAAA,eACER,IAAA,OAAIS,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,2BAAyB,CAAI,CAAC,cACzDR,IAAA,MAAGS,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,wHAAsH,CAAG,CAAC,cAC9IR,IAAA,UAAOS,SAAS,CAAC,OAAO,CAACC,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,gBAAgB,CAAE,CAAC,cACpEX,IAAA,WAAQS,SAAS,CAAC,QAAQ,CAACG,OAAO,CAAEL,QAAS,CAAAC,QAAA,CAAC,SAAO,CAAQ,CAAC,cAC9DR,IAAA,MAAGS,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,mBAAiB,CAAG,CAAC,cAczCN,KAAA,WAAQO,SAAS,CAAC,uBAAuB,CAAAD,QAAA,eACvCR,IAAA,CAACF,QAAQ,EAACW,SAAS,CAAC,aAAa,CAAE,CAAC,wBACtC,EAAQ,CAAC,cACTP,KAAA,MAAGO,SAAS,CAAC,MAAM,CAAAD,QAAA,EAAC,2BAAyB,cAAAR,IAAA,MAAGa,IAAI,CAAC,oCAAoC,CAACJ,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,SAAO,CAAG,CAAC,EAAG,CAAC,EAC1H,CAAC,CAEP,CAAC,CAED,cAAe,CAAAH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}